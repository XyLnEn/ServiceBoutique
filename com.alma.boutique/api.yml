# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Lenny & Tommy - API de la boutique
  description: API publique de la boutique Lenny & Tommy
  version: "1.0.0"
# the domain of the service
host: api.example.org
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /product/all:
    get:
      summary: Get all products
      tags:
        - Product
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /product/{id}:
    get:
      summary: Get a specific product
      parameters:
        - name: id
          in: path
          description: The identifier of the product
          required: true
          type: number
          format: int
      tags:
        - Product
      responses:
        200:
          description: A specific product
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /product/all/{id}:
    get:
      summary: Get all products in a special currency
      parameters:
        - name: id
          in: path
          description: The currency to use
          required: true
          type: string
      tags:
        - Product
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /product/new:
    post:
      summary: Create a new product
      parameters:
        - name: product
          in: body
          description: The product to create
          schema:
            $ref: '#/definitions/Product'
          required: true
      tags:
        - Product
      responses:
        200:
          description: The newly created product
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /product/delete/{id}:
    delete:
      summary: delete a specific product
      parameters:
        - name: id
          in: path
          description: The identifier of the product to delete
          required: true
          type: number
          format: int
      tags:
        - Product
      responses:
        200:
          description: The deleted product
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /order/all:
    get:
      summary: Get all the orders
      tags:
        - Order
      responses:
        200:
          description: An array of Orders
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /order/{id}:
    get:
      summary: Get a specific order
      parameters:
        - name: id
          in: path
          description: The identifier of the order
          required: true
          type: number
          format: int
      tags:
        - Order
      responses:
        200:
          description: A specific order
          schema:
            $ref: '#/definitions/Order'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /order/new:
    post:
      summary: Create a new Order
      parameters:
        - name: products
          in: body
          description: The identifiers of the products in the order
          required: true
          schema:
            type: array
            items:
              type : number
        - name: deliverer
          in: query
          description: The deliverer of the order
          required: true
          type: string
      tags:
        - Order
      responses:
        200:
          description: The newly created order
          schema:
            $ref: '#/definitions/Order'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /order/delete/{id}:
    delete:
      summary: delete a specific order
      parameters:
        - name: id
          in: path
          description: The identifier of the order to delete
          required: true
          type: number
          format: int
      tags:
        - Order
      responses:
        200:
          description: The deleted order
          schema:
            $ref: '#/definitions/Order'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /transaction/all:
    get:
      summary: Get all the transactions
      tags:
        - Transaction
      responses:
        200:
          description: An array of Transaction
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /transaction/{user_id}:
    get:
      summary: Get a specific transaction
      parameters:
        - name: user_id
          in: path
          description: The identifier of the user who created the transaction
          required: true
          type: number
          format: int
      tags:
        - Transaction
      responses:
        200:
          description: A specific transaction
          schema:
            $ref: '#/definitions/Transaction'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /transaction/new/sale:
    post:
      summary: create a transaction with the specified products
      parameters:
        - name : resp
          in: body
          description : the responce
          schema :
            $ref : '#/definitions/Achat'
          required : true
      tags:
        - Transaction
      responses:
        200:
          description: A specific transaction
          schema:
            $ref: '#/definitions/Transaction'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /person/all:
    get:
      summary: Get all the persons
      tags:
        - Person
      responses:
        200:
          description: An array of persons
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /person/{id}:
    get:
      summary: Get a specific transaction
      parameters:
        - name: id
          in: path
          description: The identifier of the person
          required: true
          type: number
          format: int
      tags:
        - Person
      responses:
        200:
          description: A specific person
          schema:
            $ref: '#/definitions/Person'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions :
  Error:
    type: object
    properties:
      name:
        type: string
        description: The name of the error
      description:
        type: string
        description: The description of the error
  Product:
    type: object
    properties:
      id:
        type: number
        description: A unique identifier
      name:
        type: string
        description: The name of the product
      description:
        type: string
        description: Description of product.
      price:
        type: number
        description: The price of the product
  Order:
    type: object
    properties:
      id:
        type: number
        description: A unique identifier
      products:
        type: array
        items:
          $ref: '#/definitions/Product'
        description: the list of associated products
      status:
        type: string
        description: the status of the order
      deliverer:
        type: string
        description: the deliverer
  Person:
    type: object
    properties:
      id:
        type: number
        description: an unique identifier
  Transaction:
    type: object
    properties:
      order:
        $ref: '#/definitions/Order'
      from:
        $ref: '#/definitions/Person'
      to:
        $ref: '#/definitions/Person'
  Achat:
    type : object
    properties:
      deliverer:
        type: string
        description: The name of the deliverer
      devise:
        type: string
        description: The name of the devise to use
      personId:
        type: integer
        description: the id of the buyer
      cardNumber:
        type: integer
        description: the card number
      idList:
        type: array
        items:
          type: int
        description: the list of ids of products tu byu
